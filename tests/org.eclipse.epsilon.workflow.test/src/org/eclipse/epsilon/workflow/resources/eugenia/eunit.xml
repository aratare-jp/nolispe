<project>
	<target name="base-test">
		<!--
			This property must be overridden by the test. If case.name were set
			to "casename", we would expect resources/eugenia/casename to contain
			casename.emf, casename.ecore, casename.genmodel, casename.gmfgraph,
			casename.gmftool, casename.gmfmap and casename.gmfgraph.
		-->
		<property name="case.name" value="default" />

		<property name="test.tmp.location" location="tmp" />
		<property name="test.dir.location" location="${case.name}" />

		<!-- Prepare the work directory -->
		<mkdir dir="${test.tmp.location}" />
		<copy todir="${test.tmp.location}">
			<fileset dir="${test.dir.location}" includes="*.emf *.eol" />
		</copy>

		<!-- Generate models with Eugenia -->
		<epsilon.eugenia src="${test.tmp.location}/${case.name}.emf" lastStep="gmfgen" />

		<!-- Test these models with EUnit -->
		<epsilon.eunit src="regression.eunit">
			<parameter name="dirtemp" value="${test.tmp.location}" />
			<parameter name="direxpected" value="${test.dir.location}" />
			<parameter name="casename" value="${case.name}" />
		</epsilon.eunit>
	</target>

	<!--
		We cannot test only using firstStep, as the "Code generation completed
		successfully" dialog would make the test stop until we clicked on the
		OK button.
	-->
	<target name="only-last">
		<epsilon.eugenia src="${case.name}/${case.name}.emf" lastStep="genmodel" />
	</target>

	<target name="first-and-last-from-genmodel">
		<epsilon.eugenia src="${case.name}/${case.name}.emf" firstStep="genmodel" lastStep="genmodel" />
	</target>

	<target name="first-and-last-from-ecore">
		<epsilon.eugenia src="${case.name}/${case.name}.emf" firstStep="ecore" lastStep="genmodel" />
	</target>

	<target name="extra-models">
		<epsilon.emf.loadModel name="Labels"
			modelfile="${case.name}/labels.model"
			metamodelfile="${case.name}/labels.ecore"
			read="true" store="false"/>

		<epsilon.eugenia src="${case.name}/${case.name}.emf" lastStep="gmf">
			<model ref="Labels" step="gmf"/>
		</epsilon.eugenia>

		<epsilon.eunit src="${case.name}/tests.eunit">
			<modelTasks>
				<epsilon.emf.loadModel name="Model"
					modelfile="${case.name}/${case.name}.gmfgraph"
					metamodeluri="http://www.eclipse.org/gmf/2006/GraphicalDefinition"
					read="true" store="false"/>
			</modelTasks>
		</epsilon.eunit>
	</target>

	<target name="emf-in-root">
		<property name="project.root" location="${basedir}/.."/>
		<copy todir="${project.root}">
			<fileset dir="${case.name}" includes="*.emf *.eol" />
		</copy>
		<epsilon.eugenia src="${project.root}/${case.name}.emf" lastStep="gmfgen" />
	</target>
</project>
